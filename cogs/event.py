import discord
from discord.ext import commands
import os
from discord.utils import get
from random import randint
import json
import requests
import random
import sqlite3
import random as r
import asyncio
import random
from random import choice
import datetime
from random import randint
from Cybernator import Paginator
from discord.ext.commands import Bot
import sys
import traceback
import wikipedia
from googletrans import Translator
from time import sleep
import googletrans
import socket
import psutil as ps
import time 
import os
import yaml

res  = 684724479209111563

class event(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@commands.command() # —Å–æ–∑–¥–∞—ë–º –∫–æ–º–∞–Ω–¥—É
	async def —Ñ–ª–∞–≥–∏(self, ctx): # —Ñ—É–Ω–∫—Ü–∏—é
		event_members = {} # —Å–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å, –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—Ç—å –±–∞–ª–ª—ã –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–≥—Ä—ã
		with open('flags.json','r',encoding='utf8') as f: # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π utf8, —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –æ–∫
			flags = json.load(f) # –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
			count = 1 # –ø–æ–¥—Å—á—ë—Ç —Ä–∞—É–Ω–¥–æ–≤
			while count <= 10: # –≤—Å–µ–≥–æ 10 —Ä–∞—É–Ω–¥–æ–≤, –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
				otvet = random.choice(flags['–§–ª–∞–≥–∏']) # –≤—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–ª–∞–≥, –∫–æ—Ç–æ—Ä—ã–π —Å–∫–∏–Ω–µ—Ç –±–æ—Ç –∏ –±—É–¥–µ—Ç –æ–∂–∏–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞ –∫ –Ω–µ–º—É (–≤—Å—ë –∏–∑ —Ñ–∞–π–ª–∞ flags.json)
				e = discord.Embed(title = f"–§–ª–∞–≥ {count}") # —Å–æ–∑–¥–∞—ë–º —ç–º–±–µ–¥, —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–§–ª–∞–≥ ‚Ññ", –Ω–∞ –º–µ—Å—Ç–µ –Ω–æ–º–µ—Ä–∞ –±—É–¥–µ—Ç —á–∏—Å–ª–æ —Ä–∞—É–Ω–¥–∞
				e.set_image(url = otvet['url']) # —Å—Ç–∞–≤–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–∑—è–≤ —Å—Å—ã–ª–∫—É –∏–∑ —Ñ–∞–π–ª–∞ flags.json
				await ctx.send(embed = e) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥
				def check(m):
					return otvet['answer'] in m.content or otvet['answer'].capitalize() in m.content or otvet['answer'].lower() in m.content or otvet['answer'].upper() in m.content and ctx.channel == ctx.channel

				msg = await self.client.wait_for('message', check=check) # –æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞
				if str(msg.author.id) not in event_members: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, –µ—Å—Ç—å –ª–∏ –∞–≤—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ –≤ –Ω–∞—à–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ä–∞–Ω–µ–µ —Å–ª–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –∑–∞–Ω–æ—Å–∏—Ç –∏ –¥–∞—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ 1
					event_members[str(msg.author.id)] = {} # –∑–∞–Ω–æ—Å–∏–º –≤ —Å–ª–æ–≤–∞—Ä—å
					event_members[str(msg.author.id)]["score"] = 1 # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–∞–¥–∞—ë–º
				elif str(msg.author.id) in event_members: # –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ —É–∂–µ –µ—Å—Ç—å –≤ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ - —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞
					event_members[str(msg.author.id)]["score"] += 1 # –¥–æ–±–∞–≤–ª—è–µ—Ç 1 –æ—á–∫–æ
				em = discord.Embed(title = "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!") # —Å–æ–∑–¥–∞—ë–º —ç–º–±–µ–¥, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º —á—Ç–æ –±—ã–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
				em.add_field(name = "–û—Ç–≤–µ—Ç–∏–ª:", value = f"{msg.author.mention}") # –∫—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª
				em.add_field(name = "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:",value = f"{otvet['answer']}") # –∫–∞–∫–æ–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
				await ctx.channel.send(embed = em) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
				count = count + 1 # —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥
				await asyncio.sleep(1) # –∂–¥—ë–º, —á—Ç–æ–±—ã –≤—Å—ë —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ –Ω–µ –±—ã–ª–æ
				if count == 11: # –µ—Å–ª–∏ —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π 11 —Ä–∞—É–Ω–¥ (–∫–æ–Ω–µ—Ü –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) —Ç–æ —ç—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
					e = discord.Embed(title = "–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã!", description = f"–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:") # —Å–æ–∑–¥–∞—ë—Ç —ç–º–±–µ–¥ —Å —Ç–∞–±–ª–∏—Ü–æ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∏ –∏—Ö –±–∞–ª–ª–∞–º–∏
					leaders = sorted(event_members, key=lambda score: event_members[score]['score'], reverse=True) # —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–æ –∫–ª—é—á—É score (–æ—á–∫–∏)
					position = 1 # –Ω–∞—á–∏–Ω–∞–µ–º —Å 1 —á–µ–ª–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
					for leader in leaders: # —Å–æ–∑–¥–∞—ë–º —Ü–∏–∫–ª –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —Å–ª–æ–≤–∞—Ä—è
						leader = self.client.get_user(int(leaders[position-1])) # –ø–æ–ª—É—á–∞–µ–º —á–µ–ª–æ–≤–µ–∫–∞
						leader_score = event_members[str(leader.id)]['score'] # –ø–æ–ª—É—á–∞–µ–º –æ—á–∫–∏ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
						e.add_field(name=f"{position} –º–µ—Å—Ç–æ:", value=f"{leader.mention} | –æ—á–∫–∏: **{leader_score}**",inline=False) # –∑–∞–Ω–æ—Å–∏–º –≤ –µ–≥–æ –Ω–∞—à—É —Ç–∞–±–ª–∏—Ü—É
						position += 1 # —Å—Ç—Ä–æ—á–∫–∞, —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –≤—Å–µ—Ö
					await ctx.send(embed = e) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ –æ–±—ä—è–≤–ª—è—è –∫–æ–Ω–µ—Ü
					return # –∫–æ–Ω–µ—Ü, —Ü–µ–Ω–æ–∫!

	

	@commands.command(aliases = ['g'])
	async def giveaway( self, ctx, seconds: int, *, text ):
		def time_end_form( seconds ):
			h = seconds//3600
			m = (seconds - h*3600)//60
			s = seconds%60
			if h < 10:
				h = f"0{h}"
			if m < 10:
				m = f"0{m}"
			if s < 10:
				s = f"0{s}"
			time_reward = f"{h} : {m} : {s}"
			return time_reward
 
		author = ctx.message.author
		time_end = time_end_form(seconds)
		msgs = '<@&763389887272976385>'
		message = await ctx.send(embed = discord.Embed(
			description = f"**–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è : `{text}`\n–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑: `{time_end}` \n\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {author.mention} \n–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ.**",
			colour = 0xa400fc), content=msgs)
		await message.add_reaction("üéâ")
		while seconds > -1:
			time_end = time_end_form(seconds)
			text_message = discord.Embed(
				description = f"**–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è: *_{text}_*\n–ó–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑: `{time_end}` \n\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {author.mention} \n–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ.**",
				colour = 0xa400fc)
			await message.edit(embed = text_message)
			await asyncio.sleep(1)
			seconds -= 1
			if seconds < -1:
				break
		channel = message.channel
		message_id = message.id
		message = await channel.fetch_message(message_id)
		reaction = message.reactions[ 0 ]
 
		users = await reaction.users().flatten()
		if reaction.count == 1:
 
			win = discord.Embed(
				description = f'**–í —ç—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è!**',
				colour = 0xa400fc)
			await message.edit(embed = win)
		else:
			user_win = random.choice(users)
			while str(user_win.id) == str(self.bot.user.id):
				user_win = random.choice(users)
		
			win = discord.Embed(
				description = f'**–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à—ë–Ω!\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {user_win.mention}!\n–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É, {author.mention}, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É.**',
				colour = 0xa400fc)
			await message.edit(embed = win)

def setup(bot):
	bot.add_cog(event(bot))
	print("[SplashBot] –ö–æ–≥: –ò–≤–µ–Ω—Ç. –ó–∞–≥—Ä—É–∂–µ–Ω")
